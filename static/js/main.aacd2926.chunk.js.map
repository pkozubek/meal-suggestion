{"version":3,"sources":["components/singleIngredient.js","components/ingredients.js","components/singleMeal.js","components/suggestedMeals.js","components/UI/paragraph.js","components/UI/logo.js","components/UI/select.js","components/UI/button.js","components/UI/input.js","globalConst/globalConst.js","containers/Form.js","API/API.js","containers/Main.js","App.js","serviceWorker.js","index.js"],"names":["Tag","styled","div","_templateObject","props","source","singleIngredients","name","click","react_default","a","createElement","onClick","IngredientsContainer","ingredients_templateObject","ingredients","deleteIngredient","style","color","map","singleIngr","index","singleIngredient","key","MealContainer","singleMeal_templateObject","Title","h2","_templateObject2","Image","img","_templateObject3","singleMeal","_props$singleMeal","title","thumbnail","href","alt","src","components_ingredients","suggestedMeals","react","meals","element","preparedElement","Object","objectSpread","split","arrElement","trim","components_singleMeal","StyledParagraph","p","paragraph_templateObject","paragraph","children","h1","logo_templateObject","logo","logo_Title","StyledSelect","select","select_templateObject","options","change","onChange","singleOption","StyledButton","button","button_templateObject","StyledInput","input","input_templateObject","enterHandler","onKeyDown","event","StyledForm","Form_templateObject","Form","_this$props","this","inputChange","loadMeals","UI_paragraph","UI_select","global","UI_input","UI_button","Component","getMeal","_ref","asyncToGenerator","regenerator_default","mark","_callee","ingridientsAdded","results","wrap","_context","prev","next","axios","get","CORS_ANYWHERE","join","then","response","data","sent","abrupt","stop","_x","apply","arguments","Main","state","ingredientsAdded","api","_this","dataTab","setState","handleIngridentsChange","value","target","includes","concat","toConsumableArray","handleDelete","ingredientsToDelete","filter","addIngrident","ingredientVal","UI_logo","length","containers_Form","components_suggestedMeals","App","className","containers_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aacd2926.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Tag = styled.div`\r\n  width: auto;\r\n  height: 20px;\r\n  color: white;\r\n  background: ${props => (props.source === \"recipe\" ? \"gray\" : \"blue\")};\r\n  border-radius: 4px;\r\n  margin: 5px;\r\n  padding: ${props => (props.source === \"receipe\" ? \"5px\" : \"10px\")};\r\n\r\n  &:hover {\r\n    cursor: ${props => (props.source === \"recipe\" ? \"pointer\" : \"default\")};\r\n  }\r\n`;\r\n\r\nconst singleIngredients = props => {\r\n  const { name, click, source } = props;\r\n  return (\r\n    <Tag\r\n      source={source}\r\n      onClick={source === \"recipe\" ? null : () => click(name)}\r\n    >\r\n      {name}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nexport default singleIngredients;\r\n","import React from \"react\";\r\nimport SingleIngredient from \"./singleIngredient\";\r\nimport styled from \"styled-components\";\r\n\r\nconst IngredientsContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: ${props => (props.source === \"recipe\" ? \"80%\" : \"60%\")};\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ingredients = props => {\r\n  const { source, deleteIngredient } = props;\r\n\r\n  return (\r\n    <IngredientsContainer source={source}>\r\n      {source === \"recipe\" ? (\r\n        <b style={{ color: \"gray\" }}>Ingredients needed: </b>\r\n      ) : null}\r\n      {props.ingredients.map((singleIngr, index) => {\r\n        return (\r\n          <SingleIngredient\r\n            source={source}\r\n            click={deleteIngredient}\r\n            key={index}\r\n            name={singleIngr}\r\n          />\r\n        );\r\n      })}\r\n    </IngredientsContainer>\r\n  );\r\n};\r\n\r\nexport default ingredients;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Ingredients from \"./ingredients\";\r\n\r\nconst MealContainer = styled.div`\r\n  box-shadow: 0 0 10px gray;\r\n  background: white;\r\n  width: 40%;\r\n  margin: 30px auto;\r\n  display: block;\r\n\r\n  @media (max-width: 1027px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 1.4em;\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 140px;\r\n  height: 140px;\r\n  display: block;\r\n  margin: 10px auto;\r\n`;\r\n\r\nconst singleMeal = props => {\r\n  const { title, thumbnail, ingredients, href } = props.singleMeal;\r\n\r\n  return (\r\n    <MealContainer>\r\n      <Title>{title}</Title>\r\n      <a href={href}>(Link)</a>\r\n      <Image alt={title} src={thumbnail} />\r\n      <Ingredients source=\"recipe\" ingredients={ingredients} />\r\n    </MealContainer>\r\n  );\r\n};\r\n\r\nexport default singleMeal;\r\n","import React, { Fragment } from \"react\";\r\nimport SingleMeal from \"./singleMeal\";\r\n\r\nconst suggestedMeals = props => {\r\n  return (\r\n    <Fragment>\r\n      {props.meals.map((element, index) => {\r\n        let { ingredients } = element;\r\n\r\n        let preparedElement = {\r\n          ...element,\r\n          ingredients: ingredients\r\n            .split(\",\")\r\n            .map(arrElement => arrElement.trim())\r\n        };\r\n\r\n        //console.log(preparedElement);\r\n        return <SingleMeal key={\"s\" + index} singleMeal={preparedElement} />;\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default suggestedMeals;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledParagraph = styled.p`\r\n  color: blue;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n  font-family: \"Indie Flower\", cursive;\r\n  font-size: 1.5em;\r\n  margin-block-end: 4px;\r\n`;\r\n\r\nconst paragraph = props => {\r\n  return <StyledParagraph>{props.children}</StyledParagraph>;\r\n};\r\n\r\nexport default paragraph;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Title = styled.h1`\r\n  font-size: 3em;\r\n  color: blue;\r\n  text-align: center;\r\n  font-family: \"Indie Flower\", cursive;\r\n`;\r\n\r\nconst logo = props => {\r\n  return <Title>Suggest meal</Title>;\r\n};\r\n\r\nexport default logo;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSelect = styled.select`\r\n  padding: 5px;\r\n  border: 1px solid gray;\r\n  width: 150px;\r\n  height: 30px;\r\n  border-radius: 8px;\r\n  margin: 0 auto;\r\n  display: block;\r\n  color: blue;\r\n`;\r\n\r\nconst select = props => {\r\n  const { options, change } = props;\r\n\r\n  return (\r\n    <StyledSelect onChange={change}>\r\n      {options.map(singleOption => (\r\n        <option key={singleOption}>{singleOption}</option>\r\n      ))}\r\n    </StyledSelect>\r\n  );\r\n};\r\n\r\nexport default select;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n  background: white;\r\n  border: 1px solid blue;\r\n  color: blue;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  transition: background 0.4s;\r\n\r\n  &:hover {\r\n    background: blue;\r\n    color: white;\r\n    transition: background 0.4s;\r\n    transition: color 0.5s;\r\n  }\r\n`;\r\n\r\nconst button = props => {\r\n  return <StyledButton onClick={props.click}>{props.children}</StyledButton>;\r\n};\r\n\r\nexport default button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-bottom: 35px;\r\n  font-size: 1.6em;\r\n  width: 60%;\r\n  padding: 5px;\r\n  border: none;\r\n  border-bottom: 1px solid blue;\r\n  box-shadow: none;\r\n  background: none;\r\n  font-family: \"Indie Flower\", cursive;\r\n  color: blue;\r\n  text-align: center;\r\n\r\n  @media (max-width: 1027px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst input = props => {\r\n  const { enterHandler } = props;\r\n\r\n  const enterPress = event => {\r\n    if (event.key === \"Enter\") {\r\n      enterHandler(event);\r\n    }\r\n  };\r\n\r\n  return <StyledInput onKeyDown={enterPress} />;\r\n};\r\n\r\nexport default input;\r\n","export const ingredients = [\r\n  \"onion\",\r\n  \"egg\",\r\n  \"garlic\",\r\n  \"tomato\",\r\n  \"rise\",\r\n  \"pasta\",\r\n  \"chicken\",\r\n  \"beef\",\r\n  \"mushroom\"\r\n];\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Paragraph from \"../components/UI/paragraph\";\r\nimport Select from \"../components/UI/select\";\r\nimport Button from \"../components/UI/button\";\r\nimport Input from \"../components/UI/input\";\r\n\r\nimport * as global from \"../globalConst/globalConst\";\r\n\r\nconst StyledForm = styled.div`\r\n  box-shadow: 0 0 10px gray;\r\n  background: ghostwhite;\r\n  width: 40%;\r\n  margin: 25px auto;\r\n  padding: 25px;\r\n  border-radius: 4px;\r\n\r\n  @media (max-width: 1027px) {\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nclass Form extends Component {\r\n  render() {\r\n    const { inputChange, loadMeals } = this.props;\r\n\r\n    return (\r\n      <StyledForm>\r\n        <Paragraph>Choose ingredients: </Paragraph>\r\n        <Select change={inputChange} options={global.ingredients} />\r\n        <Paragraph>Can't find you favourite ingredients? Write it!</Paragraph>\r\n        <Input enterHandler={inputChange} />\r\n        <Button click={loadMeals}>Search</Button>\r\n      </StyledForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"http://www.recipepuppy.com/api/\";\r\nconst CORS_ANYWHERE = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\nconst generateQuery = ingredients => {\r\n  return CORS_ANYWHERE + API_URL + \"?i=\" + ingredients.join(\",\");\r\n};\r\n\r\nexport const getMeal = async ingridientsAdded => {\r\n  const results = await axios\r\n    .get(generateQuery(ingridientsAdded))\r\n    .then(response => {\r\n      let { results } = response.data;\r\n      return results;\r\n    });\r\n\r\n  return results;\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport Ingredients from \"../components/ingredients\";\r\nimport SuggestedMeals from \"../components/suggestedMeals\";\r\nimport Paragraph from \"../components/UI/paragraph\";\r\nimport Logo from \"../components/UI/logo\";\r\nimport Form from \"./Form\";\r\n\r\nimport * as api from \"../API/API\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    ingredientsAdded: [],\r\n    suggestedMeals: []\r\n  };\r\n\r\n  loadMeals = () => {\r\n    api.getMeal(this.state.ingredientsAdded).then(dataTab => {\r\n      this.setState({\r\n        suggestedMeals: dataTab\r\n      });\r\n    });\r\n  };\r\n\r\n  handleIngridentsChange = event => {\r\n    const { value } = event.target;\r\n    if (!this.state.ingredientsAdded.includes(value)) {\r\n      this.setState({\r\n        ingredientsAdded: [...this.state.ingredientsAdded, value]\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDelete = ingredientsToDelete => {\r\n    this.setState({\r\n      ingredientsAdded: this.state.ingredientsAdded.filter(\r\n        element => element !== ingredientsToDelete\r\n      )\r\n    });\r\n  };\r\n\r\n  addIngrident = () => {\r\n    this.setState({\r\n      ingredientsAdded: [\r\n        ...this.state.ingredientsAdded,\r\n        this.state.ingredientVal\r\n      ],\r\n      ingredientVal: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Logo />\r\n        {this.state.ingredientsAdded.length > 0 ? (\r\n          <Paragraph>You are looking for meals with: </Paragraph>\r\n        ) : null}\r\n        <Ingredients\r\n          deleteIngredient={this.handleDelete}\r\n          ingredients={this.state.ingredientsAdded}\r\n        />\r\n        <Form\r\n          loadMeals={this.loadMeals}\r\n          inputChange={this.handleIngridentsChange}\r\n        />\r\n        <SuggestedMeals meals={this.state.suggestedMeals} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Main from \"./containers/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}